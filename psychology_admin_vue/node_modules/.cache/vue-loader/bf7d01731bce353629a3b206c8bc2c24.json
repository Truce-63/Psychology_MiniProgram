{"remainingRequest":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\src\\components\\shop\\Problem.vue?vue&type=style&index=0&id=735dc976&lang=less&scoped=true","dependencies":[{"path":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\src\\components\\shop\\Problem.vue","mtime":1723689351661},{"path":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\css-loader\\index.js","mtime":1709293572000},{"path":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1709293572000},{"path":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\less-loader\\dist\\cjs.js","mtime":1709293572000},{"path":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709293572000},{"path":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1709293572000}],"contextDependencies":[],"result":["\r\n/* 可以在此处添加样式 */\r\n",{"version":3,"sources":["Problem.vue"],"names":[],"mappings":";AAgTA","file":"Problem.vue","sourceRoot":"src/components/shop","sourcesContent":["<template>\r\n<div class=\"list\">\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n        <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n        <el-breadcrumb-item>服务管理</el-breadcrumb-item>\r\n        <el-breadcrumb-item>题目管理</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n\r\n    <!-- 卡片视图区域 -->\r\n    <el-card>\r\n        <el-row :gutter=\"20\">\r\n            <el-col :span=\"8\">\r\n                <el-input placeholder=\"请输入题目\" v-model=\"problem_title\" clearable @clear=\"getTimuList()\">\r\n                    <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getTimuList\"></el-button>\r\n                </el-input>\r\n            </el-col>\r\n            <el-col :span=\"4\">\r\n                <el-button type=\"primary\" @click=\"openModal(true)\">新增题目</el-button>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <!-- 题目列表区域 -->\r\n        <el-table :data=\"tableList\" border stripe>\r\n            <el-table-column label=\"序号\" type=\"index\"></el-table-column>\r\n            <el-table-column label=\"题目名称\" prop=\"problem_title\"></el-table-column>\r\n            <el-table-column label=\"操作\" width=\"150px\">\r\n                <template v-slot=\"scope\">\r\n                    <!-- 修改按钮 -->\r\n                    <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"openModal(false, scope.row)\"></el-button>\r\n                    <!-- 删除按钮 -->\r\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeClass(scope.row)\"></el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n    </el-card>\r\n\r\n    <!-- 新增 & 修改题目内容区域 -->\r\n    <el-dialog :title=\"isAdd ? '新增题目' : '修改题目'\" :visible.sync=\"isModal\" width=\"66%\" @close=\"closeModal\">\r\n        <el-form :model=\"formSource\" ref=\"formSource\" label-width=\"90px\" :rules=\"rules\">\r\n            <el-form-item label=\"题目\" prop=\"problem_title\" label-width=\"160px\" required>\r\n                <el-input v-model=\"formSource.problem_title\" placeholder=\"请输入题目\"></el-input>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"题目类型\" prop=\"problem_type\" label-width=\"160px\" required>\r\n                <el-select v-model=\"formSource.problem_type\" placeholder=\"请选择\">\r\n                    <el-option v-for=\"item in options\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n\r\n            <el-form-item label=\"题目选项\" prop=\"problem_option\" label-width=\"160px\" required>\r\n                <el-form-item \r\n                  style=\"margin-bottom: 8px\" \r\n                  v-for=\"(item, index) in formSource.problem_option\" \r\n                  :label=\"'选项' + (index + 1)\" \r\n                  :key=\"index\" \r\n                  :prop=\"'problem_option.' + index + '.option_name'\" \r\n                  >\r\n                    <el-input v-model=\"item.option_name\" style=\"width: 40%; margin-top: 15px;\" placeholder=\"请输入选项\"></el-input>\r\n                    <span style=\"margin: 0 16px\">分数</span>\r\n                    <el-input \r\n                      type=\"number\" \r\n                      v-model=\"item.option_score\" \r\n                      style=\"width: 40%;\" \r\n                      placeholder=\"请选择分数\" \r\n                      ></el-input>\r\n                    <el-button @click.prevent=\"removeIngredients(item)\" style=\"margin-left: 10px;margin-top: 15px\">\r\n                        删除\r\n                    </el-button>\r\n                </el-form-item>\r\n                <el-form-item>\r\n                    <el-button style=\"margin-left: 90px; margin-top:15px\" @click=\"addIngredients\">\r\n                        新增选项\r\n                    </el-button>\r\n                </el-form-item>\r\n            </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button type=\"primary\" @click=\"setClass\">确 定</el-button>\r\n        </span>\r\n    </el-dialog>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            options: [{\r\n                    value: 0,\r\n                    label: '双相情感障碍测试'\r\n                },\r\n                {\r\n                    value: 1,\r\n                    label: '人格测评'\r\n                },\r\n                {\r\n                    value: 2,\r\n                    label: '智力测试'\r\n                },\r\n                {\r\n                    value: 3,\r\n                    label:'职业人格测试'\r\n                }\r\n            ],\r\n            isAdd: true, // 是否为新增题目 默认是\r\n            tableList: [], // 表格数据源\r\n            isModal: false, // 控制对话框的显示与隐藏\r\n\r\n            formSource: {\r\n                id: null, // 题目id\r\n                problem_title: '', // 题目名称\r\n                problem_type: null,\r\n                problem_option: [{\r\n                    option_name: '',\r\n                    option_score: null\r\n                }]\r\n            }, // 表单数据\r\n            rules: {\r\n                problem_title: [{\r\n                    required: true,\r\n                    message: '题目不能为空!',\r\n                    trigger: 'blur'\r\n                }],\r\n                problem_type: [{\r\n                    required: true,\r\n                    message: '请选择题目类型',\r\n                    trigger: 'change'\r\n                }],\r\n                problem_option: [\r\n                {\r\n                  validator: (rule, value, callback) => {\r\n                    if (!value || !value.length) {\r\n                      callback(new Error('必须至少添加一个选项'));\r\n                    } else {\r\n                      // Check if all options and scores are valid\r\n                      for (const option of value) {\r\n                        if (!option.option_name || option.option_score < 0) {\r\n                          callback(new Error('所有选项和分数不能为空，且分数必须大于等于0'));\r\n                          return;\r\n                        }\r\n                      }\r\n                      callback();\r\n                    }\r\n                  },\r\n                  trigger: 'blur'\r\n                }\r\n              ]\r\n            }\r\n        };\r\n    },\r\n    created() {\r\n        this.getTimuList(); // 获取题目\r\n    },\r\n    methods: {\r\n        validateScore(value) {\r\n            if (value <= 0) {\r\n                this.item.option_score = ''; // 清空输入框\r\n                // 或者可以弹出提示\r\n                this.$message.warning('请输入大于0的数值');\r\n            }\r\n        },\r\n        removeIngredients(item) {\r\n            const index = this.formSource.problem_option.indexOf(item);\r\n            if (index !== -1) {\r\n                this.formSource.problem_option.splice(index, 1);\r\n            }\r\n        },\r\n        addIngredients() {\r\n            this.formSource.problem_option.push({\r\n                option_name: '',\r\n                option_score: null\r\n            });\r\n        },\r\n        async getTimuList() {\r\n            const {\r\n                data: res\r\n            } = await this.$http.post('getTimuList', {});\r\n            if (res.status === 200) {\r\n                this.tableList = (res['data'] || []).map((item) => ({\r\n                    ...item,\r\n                    problem_option: JSON.parse(item.problem_option)\r\n                }));\r\n            } else {\r\n                this.$message.error(res.msg);\r\n            }\r\n        },\r\n        openModal(type, data) {\r\n            this.isAdd = type;\r\n            this.isModal = true;\r\n            // 清空表单验证状态\r\n            this.$nextTick(() => {\r\n              this.$refs.formSource.clearValidate();\r\n            });\r\n            if (!type) {\r\n                // 如果是编辑，那么拿一下编辑的内容\r\n                this.formSource = JSON.parse(JSON.stringify(data));\r\n            }\r\n        },\r\n        // async setClass() {\r\n        //     let paramsData = {\r\n        //         ...this.formSource,\r\n        //         problem_option: JSON.stringify(this.formSource.problem_option)\r\n        //     };\r\n        //     if (this.isAdd) {\r\n        //         // 新增题目\r\n        //         const {\r\n        //             data: res\r\n        //         } = await this.$http.post('addTimuList', paramsData);\r\n        //         if (res.status === 200) {\r\n        //             this.isModal = false;\r\n        //             this.getTimuList();\r\n        //         } else {\r\n        //             this.$message.error(res.msg);\r\n        //         }\r\n        //     } else {\r\n        //         // 修改题目\r\n        //         const {\r\n        //             data: res\r\n        //         } = await this.$http.post('updateTimuList', paramsData);\r\n        //         if (res.status === 200) {\r\n        //             this.isModal = false;\r\n        //             this.getTimuList();\r\n        //         } else {\r\n        //             this.$message.error(res.msg);\r\n        //         }\r\n        //     }\r\n        // },\r\n        async setClass() {\r\n          // 先进行表单验证\r\n          this.$refs.formSource.validate(async (valid) => {\r\n            if (valid) {\r\n              // 验证通过，准备数据\r\n              let paramsData = {\r\n                ...this.formSource,\r\n                problem_option: JSON.stringify(this.formSource.problem_option)\r\n              };\r\n\r\n              try {\r\n                if (this.isAdd) {\r\n                  // 新增题目\r\n                  const { data: res } = await this.$http.post('addTimuList', paramsData);\r\n                  if (res.status === 200) {\r\n                    this.isModal = false;\r\n                    this.getTimuList();\r\n                  } else {\r\n                    this.$message.error(res.msg);\r\n                  }\r\n                } else {\r\n                  // 修改题目\r\n                  const { data: res } = await this.$http.post('updateTimuList', paramsData);\r\n                  if (res.status === 200) {\r\n                    this.isModal = false;\r\n                    this.getTimuList();\r\n                  } else {\r\n                    this.$message.error(res.msg);\r\n                  }\r\n                }\r\n              } catch (error) {\r\n                this.$message.error('请求失败，请稍后再试');\r\n                console.error(error);\r\n              }\r\n            } else {\r\n              // 验证失败，提示用户\r\n              this.$message.error('请检查表单内容');\r\n            }\r\n          });\r\n        },\r\n        removeClass(data) {\r\n            this.$confirm('此操作将无法恢复, 是否继续?', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消', \r\n                    type: 'warning'\r\n                })\r\n                .then(async () => {\r\n                    const {\r\n                        data: res\r\n                    } = await this.$http.post('delTimuList', {\r\n                        id: data.id\r\n                    });\r\n                    if (res.status === 200) {\r\n                        this.getTimuList();\r\n                    } else {\r\n                        this.$message.error(res.msg);\r\n                    }\r\n                })\r\n                .catch(() => {});\r\n        },\r\n        closeModal() {\r\n            this.formSource = {\r\n                id: null,\r\n                problem_title: '',\r\n                problem_type: null,\r\n                problem_option: [{\r\n                    option_name: '',\r\n                    option_score: null\r\n                }]\r\n            };\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n/* 可以在此处添加样式 */\r\n</style>\r\n"]}]}