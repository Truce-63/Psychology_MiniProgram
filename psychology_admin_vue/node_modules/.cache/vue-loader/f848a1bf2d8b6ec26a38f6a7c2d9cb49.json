{"remainingRequest":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\src\\components\\user\\Users.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\src\\components\\user\\Users.vue","mtime":1689248416000},{"path":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709293572000},{"path":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1709293572000},{"path":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709293572000},{"path":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1709293572000}],"contextDependencies":[],"result":["\r\nexport default {\r\n    data() {\r\n        return {\r\n            searchQuery: '', // 搜索\r\n            userlist: [],\r\n            // 控制添加用户对话框的显示与隐藏\r\n            addDialogVisible: false,\r\n            // 添加用户的表单数据\r\n            addForm: {\r\n                // 此图为系统分配商户默认头像 如需更改 请到小程序端进行头像修改\r\n                head_portrait: 'http://localhost:6008/routes/upload/A-defaultavatar.png',\r\n                username: '',\r\n                password: '',\r\n                userphone: '',\r\n            },\r\n            // 控制修改用户对话框的显示与隐藏\r\n            editDialogVisible: false,\r\n            // // 查询到的用户信息对象\r\n            editForm: {},\r\n            // 控制分配角色对话框的显示与隐藏\r\n            setRoleDialogVisible: false,\r\n        }\r\n    },\r\n    created() {\r\n        this.getUserList()\r\n    },\r\n    methods: {\r\n        async getUserList() {\r\n            const { data: res } = await this.$http.post('getUser', {})\r\n            if (res.status === 200) {\r\n                this.userlist = res.data\r\n            } else {\r\n                this.$message.error(res.msg)\r\n            }\r\n\r\n            console.log(res.list)\r\n        },\r\n\r\n        // 监听添加用户对话框的关闭事件\r\n        addDialogClosed() {\r\n            this.$refs.addFormRef.resetFields()\r\n        },\r\n        addUserModal(type) {\r\n            if (type === 'add') {\r\n                this.addUser()\r\n            } else {\r\n                this.editUserInfo()\r\n            }\r\n        },\r\n        // 点击按钮，添加新用户\r\n        async addUser() {\r\n            // 未通过检测 则不在继续执行\r\n            if (!this.checkForm(this.addForm)) {\r\n                return false\r\n            }\r\n            // 已通过检测 则可以发起添加用户的网络请求\r\n            const { data: res } = await this.$http.post('register', this.addForm)\r\n            console.log(res)\r\n            if (res.status === 200) {\r\n                this.$message.success(res.msg)\r\n            } else {\r\n                this.$message.error(res.msg)\r\n            }\r\n\r\n            // 隐藏添加用户的对话框\r\n            this.addDialogVisible = false\r\n            // 重新获取用户列表数据\r\n            this.getUserList()\r\n        },\r\n        // 展示编辑用户的对话框\r\n        async showEditDialog(obj) {\r\n            console.log(obj)\r\n            this.editForm = JSON.parse(JSON.stringify(obj))\r\n            this.fileList = [{ url: obj.head_portrait }]\r\n            this.editDialogVisible = true\r\n        },\r\n        // 监听修改用户对话框的关闭事件\r\n        editDialogClosed() {\r\n            this.$refs.editFormRef.resetFields()\r\n        },\r\n        // 修改用户信息并提交\r\n        async editUserInfo() {\r\n            // 未通过检测 则不在继续执行\r\n            if (!this.checkForm(this.editForm)) {\r\n                return false\r\n            }\r\n            // 未通过检测 则发起修改用户信息的数据请求\r\n            const { data: res } = await this.$http.post('updateUser', this.editForm)\r\n\r\n            if (res.status === 200) {\r\n                this.$message.success(res.msg)\r\n            } else {\r\n                return this.$message.error(res.msg)\r\n            }\r\n\r\n            // 关闭对话框\r\n            this.editDialogVisible = false\r\n            // 刷新数据列表\r\n            this.getUserList()\r\n        },\r\n        // 根据Id删除对应的用户信息\r\n        async removeUserById(id) {\r\n            // 弹框询问用户是否删除数据\r\n            const confirmResult = await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning',\r\n            }).catch((err) => err)\r\n\r\n            // 如果用户确认删除，则返回值为字符串 confirm\r\n            // 如果用户取消了删除，则返回值为字符串 cancel\r\n            // console.log(confirmResult)\r\n            if (confirmResult !== 'confirm') {\r\n                return this.$message.info('已取消删除')\r\n            }\r\n            const { data: res } = await this.$http.post('deleteUser', { id: id })\r\n            console.log(res.data)\r\n            if (res.status !== 200) {\r\n                return this.$message.error('删除用户失败！')\r\n            }\r\n\r\n            this.$message.success('删除用户成功！')\r\n            this.getUserList()\r\n        },\r\n\r\n        // 搜索\r\n        async getUserSearch() {\r\n            const { data: res } = await this.$http.post('getUser', { username: this.searchQuery })\r\n            console.log(res.data)\r\n            this.userlist = res.data\r\n        },\r\n\r\n        // 检查form表单是否全部填写了\r\n        checkForm(data) {\r\n            let isPhone = /^1[0-9]{10}$/.test(data.userphone)\r\n            if (!data.head_portrait) {\r\n                this.$message.error('请上传用户头像')\r\n                return false\r\n            }\r\n            if (!data.username) {\r\n                this.$message.error('请输入用户名')\r\n                return false\r\n            }\r\n            if (!data.password) {\r\n                this.$message.error('请输入密码')\r\n                return false\r\n            }\r\n            if (!data.userphone || !isPhone) {\r\n                this.$message.error('请检查手机号')\r\n                return false\r\n            }\r\n\r\n            return true\r\n        },\r\n    },\r\n}\r\n",{"version":3,"sources":["Users.vue"],"names":[],"mappings":";AAoFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Users.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\r\n    <div>\r\n        <!-- 面包屑导航区域 -->\r\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>基础设置</el-breadcrumb-item>\r\n            <el-breadcrumb-item>用户管理</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n\r\n        <!-- 卡片视图区域 -->\r\n        <el-card>\r\n            <!-- 搜索与添加区域 -->\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"8\">\r\n                    <el-input placeholder=\"请输入用户名(如：admin)\" v-model=\"searchQuery\" clearable @clear=\"getUserList()\">\r\n                        <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getUserSearch\"></el-button>\r\n                    </el-input>\r\n                </el-col>\r\n                <el-col :span=\"4\">\r\n                    <el-button type=\"primary\" @click=\"addDialogVisible = true\">添加用户</el-button>\r\n                </el-col>\r\n            </el-row>\r\n\r\n            <!-- 用户列表区域 -->\r\n            <el-table :data=\"userlist\" border stripe>\r\n                <el-table-column type=\"index\"></el-table-column>\r\n                <el-table-column label=\"用户名\" prop=\"username\"></el-table-column>\r\n                <el-table-column label=\"密码\" prop=\"password\"></el-table-column>\r\n                <el-table-column label=\"用户手机号\" prop=\"userphone\"></el-table-column>\r\n                <el-table-column label=\"操作\" width=\"180px\">\r\n                    <template slot-scope=\"scope\">\r\n                        <!-- 修改按钮 -->\r\n                        <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialog(scope.row)\"></el-button>\r\n                        <!-- 删除按钮 -->\r\n                        <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeUserById(scope.row.id)\"></el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n        </el-card>\r\n\r\n        <!-- 添加用户的对话框 -->\r\n        <el-dialog title=\"添加用户\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\r\n            <!-- 内容主体区域 -->\r\n            <el-form :model=\"addForm\" ref=\"addFormRef\" label-width=\"70px\">\r\n                <el-form-item label=\"用户名\" label-width=\"80px\" required>\r\n                    <el-input v-model=\"addForm.username\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" label-width=\"80px\" required>\r\n                    <el-input v-model=\"addForm.password\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"用户手机号\" label-width=\"80px\" required>\r\n                    <el-input maxlength=\"11\" v-model=\"addForm.userphone\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <!-- 底部区域 -->\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"addUserModal('add')\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n\r\n        <!-- 修改用户的对话框 -->\r\n        <el-dialog title=\"修改用户\" :visible.sync=\"editDialogVisible\" width=\"50%\" @close=\"editDialogClosed\">\r\n            <el-form :model=\"editForm\" ref=\"editFormRef\" label-width=\"70px\">\r\n                <el-form-item label=\"用户名\" label-width=\"80px\" required>\r\n                    <el-input v-model=\"editForm.username\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"密码\" label-width=\"80px\" required>\r\n                    <el-input v-model=\"editForm.password\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"用户手机号\" label-width=\"80px\" required>\r\n                    <el-input maxlength=\"11\" v-model=\"editForm.userphone\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"addUserModal('edit')\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            searchQuery: '', // 搜索\r\n            userlist: [],\r\n            // 控制添加用户对话框的显示与隐藏\r\n            addDialogVisible: false,\r\n            // 添加用户的表单数据\r\n            addForm: {\r\n                // 此图为系统分配商户默认头像 如需更改 请到小程序端进行头像修改\r\n                head_portrait: 'http://localhost:6008/routes/upload/A-defaultavatar.png',\r\n                username: '',\r\n                password: '',\r\n                userphone: '',\r\n            },\r\n            // 控制修改用户对话框的显示与隐藏\r\n            editDialogVisible: false,\r\n            // // 查询到的用户信息对象\r\n            editForm: {},\r\n            // 控制分配角色对话框的显示与隐藏\r\n            setRoleDialogVisible: false,\r\n        }\r\n    },\r\n    created() {\r\n        this.getUserList()\r\n    },\r\n    methods: {\r\n        async getUserList() {\r\n            const { data: res } = await this.$http.post('getUser', {})\r\n            if (res.status === 200) {\r\n                this.userlist = res.data\r\n            } else {\r\n                this.$message.error(res.msg)\r\n            }\r\n\r\n            console.log(res.list)\r\n        },\r\n\r\n        // 监听添加用户对话框的关闭事件\r\n        addDialogClosed() {\r\n            this.$refs.addFormRef.resetFields()\r\n        },\r\n        addUserModal(type) {\r\n            if (type === 'add') {\r\n                this.addUser()\r\n            } else {\r\n                this.editUserInfo()\r\n            }\r\n        },\r\n        // 点击按钮，添加新用户\r\n        async addUser() {\r\n            // 未通过检测 则不在继续执行\r\n            if (!this.checkForm(this.addForm)) {\r\n                return false\r\n            }\r\n            // 已通过检测 则可以发起添加用户的网络请求\r\n            const { data: res } = await this.$http.post('register', this.addForm)\r\n            console.log(res)\r\n            if (res.status === 200) {\r\n                this.$message.success(res.msg)\r\n            } else {\r\n                this.$message.error(res.msg)\r\n            }\r\n\r\n            // 隐藏添加用户的对话框\r\n            this.addDialogVisible = false\r\n            // 重新获取用户列表数据\r\n            this.getUserList()\r\n        },\r\n        // 展示编辑用户的对话框\r\n        async showEditDialog(obj) {\r\n            console.log(obj)\r\n            this.editForm = JSON.parse(JSON.stringify(obj))\r\n            this.fileList = [{ url: obj.head_portrait }]\r\n            this.editDialogVisible = true\r\n        },\r\n        // 监听修改用户对话框的关闭事件\r\n        editDialogClosed() {\r\n            this.$refs.editFormRef.resetFields()\r\n        },\r\n        // 修改用户信息并提交\r\n        async editUserInfo() {\r\n            // 未通过检测 则不在继续执行\r\n            if (!this.checkForm(this.editForm)) {\r\n                return false\r\n            }\r\n            // 未通过检测 则发起修改用户信息的数据请求\r\n            const { data: res } = await this.$http.post('updateUser', this.editForm)\r\n\r\n            if (res.status === 200) {\r\n                this.$message.success(res.msg)\r\n            } else {\r\n                return this.$message.error(res.msg)\r\n            }\r\n\r\n            // 关闭对话框\r\n            this.editDialogVisible = false\r\n            // 刷新数据列表\r\n            this.getUserList()\r\n        },\r\n        // 根据Id删除对应的用户信息\r\n        async removeUserById(id) {\r\n            // 弹框询问用户是否删除数据\r\n            const confirmResult = await this.$confirm('此操作将永久删除该用户, 是否继续?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning',\r\n            }).catch((err) => err)\r\n\r\n            // 如果用户确认删除，则返回值为字符串 confirm\r\n            // 如果用户取消了删除，则返回值为字符串 cancel\r\n            // console.log(confirmResult)\r\n            if (confirmResult !== 'confirm') {\r\n                return this.$message.info('已取消删除')\r\n            }\r\n            const { data: res } = await this.$http.post('deleteUser', { id: id })\r\n            console.log(res.data)\r\n            if (res.status !== 200) {\r\n                return this.$message.error('删除用户失败！')\r\n            }\r\n\r\n            this.$message.success('删除用户成功！')\r\n            this.getUserList()\r\n        },\r\n\r\n        // 搜索\r\n        async getUserSearch() {\r\n            const { data: res } = await this.$http.post('getUser', { username: this.searchQuery })\r\n            console.log(res.data)\r\n            this.userlist = res.data\r\n        },\r\n\r\n        // 检查form表单是否全部填写了\r\n        checkForm(data) {\r\n            let isPhone = /^1[0-9]{10}$/.test(data.userphone)\r\n            if (!data.head_portrait) {\r\n                this.$message.error('请上传用户头像')\r\n                return false\r\n            }\r\n            if (!data.username) {\r\n                this.$message.error('请输入用户名')\r\n                return false\r\n            }\r\n            if (!data.password) {\r\n                this.$message.error('请输入密码')\r\n                return false\r\n            }\r\n            if (!data.userphone || !isPhone) {\r\n                this.$message.error('请检查手机号')\r\n                return false\r\n            }\r\n\r\n            return true\r\n        },\r\n    },\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n</style>\r\n"]}]}