{"remainingRequest":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\src\\components\\shop\\ScoreRecord.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\src\\components\\shop\\ScoreRecord.vue","mtime":1724398314188},{"path":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709293572000},{"path":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1709293572000},{"path":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709293572000},{"path":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1709293572000}],"contextDependencies":[],"result":["\r\nexport default {\r\n    data() {\r\n        return {\r\n            shopList: [], // 用户数据源\r\n            tableList: [], // 表格数据源\r\n            user_id: '',\r\n        }\r\n    },\r\n    created() {\r\n        this.getUserList();\r\n        this.getTestResultList() // 获取答题记录\r\n    },\r\n    methods: {\r\n        // // 获取答题记录\r\n        // async search() {\r\n        //     const { data: res } = await this.$http.post('getTestResultList', {user_id: this.user_id})\r\n        //     if (res.status === 200) {\r\n        //         this.tableList = res.data\r\n        //     } else {\r\n        //         this.$message.error(res.msg)\r\n        //     }\r\n\r\n        // },\r\n        // 获取答题记录\r\n        async getTestResultList() {\r\n            const { data: res } = await this.$http.post('getTestResultList', {})\r\n            if (res.status === 200) {\r\n                this.tableList = res.data\r\n            } else {\r\n                this.$message.error(res.msg)\r\n            }\r\n\r\n        },\r\n        // 获取用户\r\n        async getUserList() {\r\n            const { data: res } = await this.$http.post('getUser', {})\r\n            if (res.status === 200) {\r\n                this.shopList = res.data\r\n            } else {\r\n                this.$message.error(res.msg)\r\n            }\r\n        },\r\n        // 删除答题记录\r\n        removeScoreRecord(data) {\r\n            this.$confirm('此操作将无法恢复, 是否继续?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning',\r\n            })\r\n                .then(async () => {\r\n                    const { data: res } = await this.$http.post('delScoreRecordList', { id: data.id })\r\n                    if (res.status === 200) {\r\n                        this.getTestResultList()\r\n                    } else {\r\n                        this.$message.error(res.msg)\r\n                    }\r\n                })\r\n                .catch(() => { })\r\n        },\r\n    },\r\n}\r\n",{"version":3,"sources":["ScoreRecord.vue"],"names":[],"mappings":";AAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ScoreRecord.vue","sourceRoot":"src/components/shop","sourcesContent":["<template>\r\n    <div class=\"list\">\r\n        <!-- 面包屑导航区域 -->\r\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>服务管理</el-breadcrumb-item>\r\n            <el-breadcrumb-item>答题记录管理</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n\r\n        <!-- 卡片视图区域 -->\r\n        <el-card>\r\n            <!-- 搜索与添加区域 -->\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"8\">\r\n                    <el-select filterable v-model=\"user_id\" placeholder=\"请选择需要查看的用户\" @change=\"search\">\r\n                        <el-option v-for=\"item in shopList\" :key=\"item.id\" :label=\"item.username\" :value=\"item.id\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-col>\r\n            </el-row>\r\n\r\n            <!-- 答题记录列表区域 -->\r\n            <el-table :data=\"tableList\" border stripe>\r\n                <el-table-column label=\"序号\" type=\"index\"></el-table-column>\r\n                <el-table-column label=\"用户id\" prop=\"user_id\"></el-table-column>\r\n                <el-table-column label=\"用户名\" prop=\"user_name\"></el-table-column>\r\n                <el-table-column label=\"分数\" prop=\"user_score\"></el-table-column>\r\n                <el-table-column label=\"报告\">\r\n                    <template slot-scope=\"scope\">\r\n                        <div class=\"tabinfo\">\r\n                            <div class=\"textbox\">\r\n                                <div>体质类型：{{ scope.row.test_type }}</div>\r\n                                <div>特征：{{ scope.row.description }}</div>\r\n                                <div>建议：{{ scope.row.suggestion }}</div>\r\n                            </div>\r\n                        </div>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"测试时间\" prop=\"update_time\"></el-table-column>\r\n                <el-table-column label=\"操作\" width=\"150px\">\r\n                    <template slot-scope=\"scope\">\r\n                        <!-- 删除按钮 -->\r\n                        <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\"\r\n                            @click=\"removeScoreRecord(scope.row)\"></el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n        </el-card>\r\n\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            shopList: [], // 用户数据源\r\n            tableList: [], // 表格数据源\r\n            user_id: '',\r\n        }\r\n    },\r\n    created() {\r\n        this.getUserList();\r\n        this.getTestResultList() // 获取答题记录\r\n    },\r\n    methods: {\r\n        // // 获取答题记录\r\n        // async search() {\r\n        //     const { data: res } = await this.$http.post('getTestResultList', {user_id: this.user_id})\r\n        //     if (res.status === 200) {\r\n        //         this.tableList = res.data\r\n        //     } else {\r\n        //         this.$message.error(res.msg)\r\n        //     }\r\n\r\n        // },\r\n        // 获取答题记录\r\n        async getTestResultList() {\r\n            const { data: res } = await this.$http.post('getTestResultList', {})\r\n            if (res.status === 200) {\r\n                this.tableList = res.data\r\n            } else {\r\n                this.$message.error(res.msg)\r\n            }\r\n\r\n        },\r\n        // 获取用户\r\n        async getUserList() {\r\n            const { data: res } = await this.$http.post('getUser', {})\r\n            if (res.status === 200) {\r\n                this.shopList = res.data\r\n            } else {\r\n                this.$message.error(res.msg)\r\n            }\r\n        },\r\n        // 删除答题记录\r\n        removeScoreRecord(data) {\r\n            this.$confirm('此操作将无法恢复, 是否继续?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning',\r\n            })\r\n                .then(async () => {\r\n                    const { data: res } = await this.$http.post('delScoreRecordList', { id: data.id })\r\n                    if (res.status === 200) {\r\n                        this.getTestResultList()\r\n                    } else {\r\n                        this.$message.error(res.msg)\r\n                    }\r\n                })\r\n                .catch(() => { })\r\n        },\r\n    },\r\n}\r\n</script>\r\n<style lang=\"less\" scoped></style>"]}]}