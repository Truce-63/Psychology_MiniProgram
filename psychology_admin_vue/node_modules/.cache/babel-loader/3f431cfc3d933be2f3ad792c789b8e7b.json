{"remainingRequest":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\src\\components\\shop\\Activitylist.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\src\\components\\shop\\Activitylist.vue","mtime":1690651524000},{"path":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\babel.config.js","mtime":1606398810000},{"path":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709293572000},{"path":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1709293572000},{"path":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709293572000},{"path":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1709293572000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:/Users/22075/Desktop/MiniProgram/\\u5FAE\\u4FE1\\u5C0F\\u7A0B\\u5E8F-\\u5FC3\\u7406\\u8D44\\u8BAF/psychology_admin_vue/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/22075/Desktop/MiniProgram/\\u5FAE\\u4FE1\\u5C0F\\u7A0B\\u5E8F-\\u5FC3\\u7406\\u8D44\\u8BAF/psychology_admin_vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nexport default {\n  data: function data() {\n    return {\n      isAdd: true,\n      // 是否为新增活动推送 默认是\n      tableList: [],\n      // 表格数据源\n      isModal: false,\n      // 控制对话框的显示与隐藏\n      formSource: {\n        id: null,\n        // 活动id\n        activity_name: '',\n        // 活动名称\n        activity_con: '',\n        // 活动内容\n        activity_time: '',\n        // 活动时间\n        activity_address: '',\n        // 活动地址\n        activity_tips: '' // 活动注意事项\n      } // 表单数据\n    };\n  },\n  created: function created() {\n    this.getClassList(); // 获取活动推送\n  },\n  methods: {\n    // 获取活动推送\n    getClassList: function () {\n      var _getClassList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$this$$http$pos, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.$http.post('getActivity', {});\n            case 2:\n              _yield$this$$http$pos = _context.sent;\n              res = _yield$this$$http$pos.data;\n              if (res.status === 200) {\n                this.tableList = res.data;\n              } else {\n                this.$message.error(res.msg);\n              }\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function getClassList() {\n        return _getClassList.apply(this, arguments);\n      }\n      return getClassList;\n    }(),\n    // 打开弹框\n    openModal: function openModal(type, data) {\n      this.isAdd = type;\n      this.isModal = true;\n      if (!type) {\n        // 如果是编辑 那么拿一下编辑的内容\n        this.formSource = JSON.parse(JSON.stringify(data));\n      }\n    },\n    // 修改活动推送\n    setClass: function () {\n      var _setClass = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$this$$http$pos2, res, _yield$this$$http$pos3, _res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!this.isAdd) {\n                _context2.next = 8;\n                break;\n              }\n              _context2.next = 3;\n              return this.$http.post('addActivity', _objectSpread(_objectSpread({}, this.formSource), {}, {\n                activity_time: this.$moment(this.formSource.activity_time).format('YYYY/MM/DD')\n              }));\n            case 3:\n              _yield$this$$http$pos2 = _context2.sent;\n              res = _yield$this$$http$pos2.data;\n              if (res.status === 200) {\n                this.isModal = false;\n                this.getClassList();\n              } else {\n                this.$message.error(res.msg);\n              }\n              _context2.next = 13;\n              break;\n            case 8:\n              _context2.next = 10;\n              return this.$http.post('updateActivity', _objectSpread(_objectSpread({}, this.formSource), {}, {\n                activity_time: this.$moment(this.formSource.activity_time).format('YYYY/MM/DD')\n              }));\n            case 10:\n              _yield$this$$http$pos3 = _context2.sent;\n              _res = _yield$this$$http$pos3.data;\n              if (_res.status === 200) {\n                this.isModal = false;\n                this.getClassList();\n              } else {\n                this.$message.error(_res.msg);\n              }\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function setClass() {\n        return _setClass.apply(this, arguments);\n      }\n      return setClass;\n    }(),\n    // 删除活动推送\n    removeClass: function removeClass(data) {\n      var _this = this;\n      this.$confirm('此操作将无法恢复, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _yield$_this$$http$po, res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this.$http.post('delActivity', {\n                id: data.id\n              });\n            case 2:\n              _yield$_this$$http$po = _context3.sent;\n              res = _yield$_this$$http$po.data;\n              if (res.status === 200) {\n                _this.getClassList();\n              } else {\n                _this.$message.error(res.msg);\n              }\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))).catch(function () {});\n    },\n    // 关闭修改对话框\n    closeModal: function closeModal() {\n      this.formSource = {\n        id: null,\n        // 活动id\n        activity_name: '',\n        // 活动名称\n        activity_con: '',\n        // 活动内容\n        activity_time: '',\n        // 活动时间\n        activity_address: '',\n        // 活动地址\n        activity_tips: '' // 活动注意事项\n      };\n      this.$refs.formSourceRef.resetFields();\n    }\n  }\n};",{"version":3,"names":["data","isAdd","tableList","isModal","formSource","id","activity_name","activity_con","activity_time","activity_address","activity_tips","created","getClassList","methods","_getClassList","_asyncToGenerator","regeneratorRuntime","mark","_callee","_yield$this$$http$pos","res","wrap","_callee$","_context","prev","next","$http","post","sent","status","$message","error","msg","stop","apply","arguments","openModal","type","JSON","parse","stringify","setClass","_setClass","_callee2","_yield$this$$http$pos2","_yield$this$$http$pos3","_res","_callee2$","_context2","_objectSpread","$moment","format","removeClass","_this","$confirm","confirmButtonText","cancelButtonText","then","_callee3","_yield$_this$$http$po","_callee3$","_context3","catch","closeModal","$refs","formSourceRef","resetFields"],"sources":["src/components/shop/Activitylist.vue"],"sourcesContent":["<template>\r\n    <div class=\"list\">\r\n        <!-- 面包屑导航区域 -->\r\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>活动推送管理</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n\r\n        <!-- 卡片视图区域 -->\r\n        <el-card>\r\n            <el-button type=\"primary\" @click=\"openModal(true)\">新增活动推送</el-button>\r\n            <!-- 活动推送列表区域 -->\r\n            <el-table :data=\"tableList\" border stripe>\r\n                <el-table-column label=\"序号\" type=\"index\"></el-table-column>\r\n                <el-table-column label=\"活动标题\" prop=\"activity_name\"></el-table-column>\r\n                <el-table-column label=\"活动内容\" prop=\"activity_con\"></el-table-column>\r\n                <el-table-column label=\"活动时间\" prop=\"activity_time\"></el-table-column>\r\n                <el-table-column label=\"活动地址\" prop=\"activity_address\"></el-table-column>\r\n                <el-table-column label=\"活动注意事项\" prop=\"activity_tips\"></el-table-column>\r\n                <el-table-column label=\"操作\" width=\"150px\">\r\n                    <template slot-scope=\"scope\">\r\n                        <!-- 修改按钮 -->\r\n                        <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"openModal(false,scope.row)\"></el-button>\r\n                        <!-- 删除按钮 -->\r\n                        <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeClass(scope.row)\"></el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n        </el-card>\r\n\r\n        <!-- 新增 & 修改活动推送内容区域 -->\r\n        <el-dialog :title=\"isAdd ? '新增活动推送' : '修改活动推送'\" :visible.sync=\"isModal\" width=\"66%\" @close=\"closeModal\">\r\n            <el-form :model=\"formSource\" ref=\"formSourceRef\" label-width=\"90px\">\r\n                <el-form-item label=\"活动标题\" label-width=\"160px\" required>\r\n                    <el-input v-model=\"formSource.activity_name\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"活动内容\" label-width=\"160px\" required>\r\n                    <el-input type=\"textarea\" v-model=\"formSource.activity_con\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"活动时间\" label-width=\"160px\" required>\r\n                    <el-date-picker v-model=\"formSource.activity_time\" type=\"date\">\r\n                    </el-date-picker>\r\n                </el-form-item>\r\n                <el-form-item label=\"活动地址\" label-width=\"160px\" required>\r\n                    <el-input v-model=\"formSource.activity_address\"></el-input>\r\n                </el-form-item>\r\n\r\n                <el-form-item label=\"活动注意事项\" label-width=\"160px\" required>\r\n                    <el-input type=\"textarea\" v-model=\"formSource.activity_tips\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button type=\"primary\" @click=\"setClass\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            isAdd: true, // 是否为新增活动推送 默认是\r\n            tableList: [], // 表格数据源\r\n            isModal: false, // 控制对话框的显示与隐藏\r\n            formSource: {\r\n                id: null, // 活动id\r\n                activity_name: '', // 活动名称\r\n                activity_con: '', // 活动内容\r\n                activity_time: '', // 活动时间\r\n                activity_address: '', // 活动地址\r\n                activity_tips: '', // 活动注意事项\r\n            }, // 表单数据\r\n        }\r\n    },\r\n    created() {\r\n        this.getClassList() // 获取活动推送\r\n    },\r\n    methods: {\r\n        // 获取活动推送\r\n        async getClassList() {\r\n            const { data: res } = await this.$http.post('getActivity', {})\r\n            if (res.status === 200) {\r\n                this.tableList = res.data\r\n            } else {\r\n                this.$message.error(res.msg)\r\n            }\r\n        },\r\n        // 打开弹框\r\n        openModal(type, data) {\r\n            this.isAdd = type\r\n            this.isModal = true\r\n            if (!type) {\r\n                // 如果是编辑 那么拿一下编辑的内容\r\n                this.formSource = JSON.parse(JSON.stringify(data))\r\n            }\r\n        },\r\n        // 修改活动推送\r\n        async setClass() {\r\n            if (this.isAdd) {\r\n                // 新增活动推送\r\n                const { data: res } = await this.$http.post('addActivity', { ...this.formSource, activity_time: this.$moment(this.formSource.activity_time).format('YYYY/MM/DD') })\r\n                if (res.status === 200) {\r\n                    this.isModal = false\r\n                    this.getClassList()\r\n                } else {\r\n                    this.$message.error(res.msg)\r\n                }\r\n            } else {\r\n                // 修改活动推送\r\n                const { data: res } = await this.$http.post('updateActivity', { ...this.formSource, activity_time: this.$moment(this.formSource.activity_time).format('YYYY/MM/DD') })\r\n                if (res.status === 200) {\r\n                    this.isModal = false\r\n                    this.getClassList()\r\n                } else {\r\n                    this.$message.error(res.msg)\r\n                }\r\n            }\r\n        },\r\n        // 删除活动推送\r\n        removeClass(data) {\r\n            this.$confirm('此操作将无法恢复, 是否继续?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning',\r\n            })\r\n                .then(async () => {\r\n                    const { data: res } = await this.$http.post('delActivity', { id: data.id })\r\n                    if (res.status === 200) {\r\n                        this.getClassList()\r\n                    } else {\r\n                        this.$message.error(res.msg)\r\n                    }\r\n                })\r\n                .catch(() => {})\r\n        },\r\n\r\n        // 关闭修改对话框\r\n        closeModal() {\r\n            this.formSource = {\r\n                id: null, // 活动id\r\n                activity_name: '', // 活动名称\r\n                activity_con: '', // 活动内容\r\n                activity_time: '', // 活动时间\r\n                activity_address: '', // 活动地址\r\n                activity_tips: '', // 活动注意事项\r\n            }\r\n            this.$refs.formSourceRef.resetFields()\r\n        },\r\n    },\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n</style>"],"mappings":";;;;;;;;AA0DA;EACAA,IAAA,WAAAA,KAAA;IACA;MACAC,KAAA;MAAA;MACAC,SAAA;MAAA;MACAC,OAAA;MAAA;MACAC,UAAA;QACAC,EAAA;QAAA;QACAC,aAAA;QAAA;QACAC,YAAA;QAAA;QACAC,aAAA;QAAA;QACAC,gBAAA;QAAA;QACAC,aAAA;MACA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,YAAA;EACA;EACAC,OAAA;IACA;IACAD,YAAA;MAAA,IAAAE,aAAA,GAAAC,iBAAA,eAAAC,kBAAA,CAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,qBAAA,EAAAC,GAAA;QAAA,OAAAJ,kBAAA,CAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACA,KAAAC,KAAA,CAAAC,IAAA;YAAA;cAAAR,qBAAA,GAAAI,QAAA,CAAAK,IAAA;cAAAR,GAAA,GAAAD,qBAAA,CAAAnB,IAAA;cACA,IAAAoB,GAAA,CAAAS,MAAA;gBACA,KAAA3B,SAAA,GAAAkB,GAAA,CAAApB,IAAA;cACA;gBACA,KAAA8B,QAAA,CAAAC,KAAA,CAAAX,GAAA,CAAAY,GAAA;cACA;YAAA;YAAA;cAAA,OAAAT,QAAA,CAAAU,IAAA;UAAA;QAAA,GAAAf,OAAA;MAAA;MAAA,SAAAN,aAAA;QAAA,OAAAE,aAAA,CAAAoB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAvB,YAAA;IAAA;IAEA;IACAwB,SAAA,WAAAA,UAAAC,IAAA,EAAArC,IAAA;MACA,KAAAC,KAAA,GAAAoC,IAAA;MACA,KAAAlC,OAAA;MACA,KAAAkC,IAAA;QACA;QACA,KAAAjC,UAAA,GAAAkC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,SAAA,CAAAxC,IAAA;MACA;IACA;IACA;IACAyC,QAAA;MAAA,IAAAC,SAAA,GAAA3B,iBAAA,eAAAC,kBAAA,CAAAC,IAAA,UAAA0B,SAAA;QAAA,IAAAC,sBAAA,EAAAxB,GAAA,EAAAyB,sBAAA,EAAAC,IAAA;QAAA,OAAA9B,kBAAA,CAAAK,IAAA,UAAA0B,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAxB,IAAA,GAAAwB,SAAA,CAAAvB,IAAA;YAAA;cAAA,KACA,KAAAxB,KAAA;gBAAA+C,SAAA,CAAAvB,IAAA;gBAAA;cAAA;cAAAuB,SAAA,CAAAvB,IAAA;cAAA,OAEA,KAAAC,KAAA,CAAAC,IAAA,gBAAAsB,aAAA,CAAAA,aAAA,UAAA7C,UAAA;gBAAAI,aAAA,OAAA0C,OAAA,MAAA9C,UAAA,CAAAI,aAAA,EAAA2C,MAAA;cAAA;YAAA;cAAAP,sBAAA,GAAAI,SAAA,CAAApB,IAAA;cAAAR,GAAA,GAAAwB,sBAAA,CAAA5C,IAAA;cACA,IAAAoB,GAAA,CAAAS,MAAA;gBACA,KAAA1B,OAAA;gBACA,KAAAS,YAAA;cACA;gBACA,KAAAkB,QAAA,CAAAC,KAAA,CAAAX,GAAA,CAAAY,GAAA;cACA;cAAAgB,SAAA,CAAAvB,IAAA;cAAA;YAAA;cAAAuB,SAAA,CAAAvB,IAAA;cAAA,OAGA,KAAAC,KAAA,CAAAC,IAAA,mBAAAsB,aAAA,CAAAA,aAAA,UAAA7C,UAAA;gBAAAI,aAAA,OAAA0C,OAAA,MAAA9C,UAAA,CAAAI,aAAA,EAAA2C,MAAA;cAAA;YAAA;cAAAN,sBAAA,GAAAG,SAAA,CAAApB,IAAA;cAAAR,IAAA,GAAAyB,sBAAA,CAAA7C,IAAA;cACA,IAAAoB,IAAA,CAAAS,MAAA;gBACA,KAAA1B,OAAA;gBACA,KAAAS,YAAA;cACA;gBACA,KAAAkB,QAAA,CAAAC,KAAA,CAAAX,IAAA,CAAAY,GAAA;cACA;YAAA;YAAA;cAAA,OAAAgB,SAAA,CAAAf,IAAA;UAAA;QAAA,GAAAU,QAAA;MAAA;MAAA,SAAAF,SAAA;QAAA,OAAAC,SAAA,CAAAR,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAM,QAAA;IAAA;IAGA;IACAW,WAAA,WAAAA,YAAApD,IAAA;MAAA,IAAAqD,KAAA;MACA,KAAAC,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAnB,IAAA;MACA,GACAoB,IAAA,eAAA1C,iBAAA,eAAAC,kBAAA,CAAAC,IAAA,UAAAyC,SAAA;QAAA,IAAAC,qBAAA,EAAAvC,GAAA;QAAA,OAAAJ,kBAAA,CAAAK,IAAA,UAAAuC,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAArC,IAAA,GAAAqC,SAAA,CAAApC,IAAA;YAAA;cAAAoC,SAAA,CAAApC,IAAA;cAAA,OACA4B,KAAA,CAAA3B,KAAA,CAAAC,IAAA;gBAAAtB,EAAA,EAAAL,IAAA,CAAAK;cAAA;YAAA;cAAAsD,qBAAA,GAAAE,SAAA,CAAAjC,IAAA;cAAAR,GAAA,GAAAuC,qBAAA,CAAA3D,IAAA;cACA,IAAAoB,GAAA,CAAAS,MAAA;gBACAwB,KAAA,CAAAzC,YAAA;cACA;gBACAyC,KAAA,CAAAvB,QAAA,CAAAC,KAAA,CAAAX,GAAA,CAAAY,GAAA;cACA;YAAA;YAAA;cAAA,OAAA6B,SAAA,CAAA5B,IAAA;UAAA;QAAA,GAAAyB,QAAA;MAAA,CACA,IACAI,KAAA;IACA;IAEA;IACAC,UAAA,WAAAA,WAAA;MACA,KAAA3D,UAAA;QACAC,EAAA;QAAA;QACAC,aAAA;QAAA;QACAC,YAAA;QAAA;QACAC,aAAA;QAAA;QACAC,gBAAA;QAAA;QACAC,aAAA;MACA;MACA,KAAAsD,KAAA,CAAAC,aAAA,CAAAC,WAAA;IACA;EACA;AACA","ignoreList":[]}]}