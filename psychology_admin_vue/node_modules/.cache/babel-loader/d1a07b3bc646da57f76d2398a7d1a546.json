{"remainingRequest":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\src\\components\\shop\\Scorerecord.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\src\\components\\shop\\Scorerecord.vue","mtime":1711888968000},{"path":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\babel.config.js","mtime":1606398810000},{"path":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709293572000},{"path":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1709293572000},{"path":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709293572000},{"path":"C:\\Users\\22075\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1709293572000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/22075/Desktop/MiniProgram/\\u5FAE\\u4FE1\\u5C0F\\u7A0B\\u5E8F-\\u5FC3\\u7406\\u8D44\\u8BAF/psychology_admin_vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nexport default {\n  data: function data() {\n    return {\n      shopList: [],\n      // 用户数据源\n      tableList: [],\n      // 表格数据源\n      user_id: ''\n    };\n  },\n  created: function created() {\n    this.getUserList();\n    this.getScoreRecordList(); // 获取答题记录\n  },\n  methods: {\n    // 获取答题记录\n    search: function () {\n      var _search = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$this$$http$pos, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.$http.post('getScoreRecordList', {\n                user_id: this.user_id\n              });\n            case 2:\n              _yield$this$$http$pos = _context.sent;\n              res = _yield$this$$http$pos.data;\n              if (res.status === 200) {\n                this.tableList = res.data;\n              } else {\n                this.$message.error(res.msg);\n              }\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function search() {\n        return _search.apply(this, arguments);\n      }\n      return search;\n    }(),\n    // 获取答题记录\n    getScoreRecordList: function () {\n      var _getScoreRecordList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$this$$http$pos2, res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.$http.post('getScoreRecordList', {});\n            case 2:\n              _yield$this$$http$pos2 = _context2.sent;\n              res = _yield$this$$http$pos2.data;\n              if (res.status === 200) {\n                this.tableList = res.data;\n              } else {\n                this.$message.error(res.msg);\n              }\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function getScoreRecordList() {\n        return _getScoreRecordList.apply(this, arguments);\n      }\n      return getScoreRecordList;\n    }(),\n    // 获取用户\n    getUserList: function () {\n      var _getUserList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _yield$this$$http$pos3, res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.$http.post('getUser', {});\n            case 2:\n              _yield$this$$http$pos3 = _context3.sent;\n              res = _yield$this$$http$pos3.data;\n              if (res.status === 200) {\n                this.shopList = res.data;\n              } else {\n                this.$message.error(res.msg);\n              }\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function getUserList() {\n        return _getUserList.apply(this, arguments);\n      }\n      return getUserList;\n    }(),\n    // 删除答题记录\n    removeScoreRecord: function removeScoreRecord(data) {\n      var _this = this;\n      this.$confirm('此操作将无法恢复, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _yield$_this$$http$po, res;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _this.$http.post('delScoreRecordList', {\n                id: data.id\n              });\n            case 2:\n              _yield$_this$$http$po = _context4.sent;\n              res = _yield$_this$$http$po.data;\n              if (res.status === 200) {\n                _this.getScoreRecordList();\n              } else {\n                _this.$message.error(res.msg);\n              }\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))).catch(function () {});\n    }\n  }\n};",{"version":3,"names":["data","shopList","tableList","user_id","created","getUserList","getScoreRecordList","methods","search","_search","_asyncToGenerator","regeneratorRuntime","mark","_callee","_yield$this$$http$pos","res","wrap","_callee$","_context","prev","next","$http","post","sent","status","$message","error","msg","stop","apply","arguments","_getScoreRecordList","_callee2","_yield$this$$http$pos2","_callee2$","_context2","_getUserList","_callee3","_yield$this$$http$pos3","_callee3$","_context3","removeScoreRecord","_this","$confirm","confirmButtonText","cancelButtonText","type","then","_callee4","_yield$_this$$http$po","_callee4$","_context4","id","catch"],"sources":["src/components/shop/Scorerecord.vue"],"sourcesContent":["<template>\r\n    <div class=\"list\">\r\n        <!-- 面包屑导航区域 -->\r\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>服务管理</el-breadcrumb-item>\r\n            <el-breadcrumb-item>答题记录管理</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n\r\n        <!-- 卡片视图区域 -->\r\n        <el-card>\r\n            <!-- 搜索与添加区域 -->\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"8\">\r\n                    <el-select filterable v-model=\"user_id\" placeholder=\"请选择需要查看的用户\" @change=\"search\">\r\n                        <el-option v-for=\"item in shopList\" :key=\"item.id\" :label=\"item.username\" :value=\"item.id\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-col>\r\n            </el-row>\r\n\r\n            <!-- 答题记录列表区域 -->\r\n            <el-table :data=\"tableList\" border stripe>\r\n                <el-table-column label=\"序号\" type=\"index\"></el-table-column>\r\n                <el-table-column label=\"用户id\" prop=\"user_id\"></el-table-column>\r\n                <el-table-column label=\"用户名\" prop=\"user_name\"></el-table-column>\r\n                <el-table-column label=\"分数\" prop=\"user_score\"></el-table-column>\r\n                <el-table-column label=\"报告\">\r\n                    <template slot-scope=\"scope\">\r\n                        <div class=\"tabinfo\">\r\n                            <div class=\"textbox\">\r\n                                <div>体质类型：{{ scope.row.objectTz.type }}</div>\r\n                                <div>特征：{{ scope.row.objectTz.description }}</div>\r\n                                <div>建议：{{ scope.row.objectTz.advice }}</div>\r\n                            </div>\r\n                        </div>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"操作\" width=\"150px\">\r\n                    <template slot-scope=\"scope\">\r\n                        <!-- 删除按钮 -->\r\n                        <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\"\r\n                            @click=\"removeScoreRecord(scope.row)\"></el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n        </el-card>\r\n\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            shopList: [], // 用户数据源\r\n            tableList: [], // 表格数据源\r\n            user_id: '',\r\n        }\r\n    },\r\n    created() {\r\n        this.getUserList();\r\n        this.getScoreRecordList() // 获取答题记录\r\n    },\r\n    methods: {\r\n        // 获取答题记录\r\n        async search() {\r\n            const { data: res } = await this.$http.post('getScoreRecordList', {user_id: this.user_id})\r\n            if (res.status === 200) {\r\n                this.tableList = res.data\r\n            } else {\r\n                this.$message.error(res.msg)\r\n            }\r\n\r\n        },\r\n        // 获取答题记录\r\n        async getScoreRecordList() {\r\n            const { data: res } = await this.$http.post('getScoreRecordList', {})\r\n            if (res.status === 200) {\r\n                this.tableList = res.data\r\n            } else {\r\n                this.$message.error(res.msg)\r\n            }\r\n\r\n        },\r\n        // 获取用户\r\n        async getUserList() {\r\n            const { data: res } = await this.$http.post('getUser', {})\r\n            if (res.status === 200) {\r\n                this.shopList = res.data\r\n            } else {\r\n                this.$message.error(res.msg)\r\n            }\r\n        },\r\n        // 删除答题记录\r\n        removeScoreRecord(data) {\r\n            this.$confirm('此操作将无法恢复, 是否继续?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning',\r\n            })\r\n                .then(async () => {\r\n                    const { data: res } = await this.$http.post('delScoreRecordList', { id: data.id })\r\n                    if (res.status === 200) {\r\n                        this.getScoreRecordList()\r\n                    } else {\r\n                        this.$message.error(res.msg)\r\n                    }\r\n                })\r\n                .catch(() => { })\r\n        },\r\n    },\r\n}\r\n</script>\r\n<style lang=\"less\" scoped></style>"],"mappings":"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","ignoreList":[]}]}