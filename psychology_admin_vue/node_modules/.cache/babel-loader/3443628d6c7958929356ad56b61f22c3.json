{"remainingRequest":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\src\\components\\shop\\ArticleList.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\src\\components\\shop\\ArticleList.vue","mtime":1689412214000},{"path":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\babel.config.js","mtime":1606398810000},{"path":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709293572000},{"path":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1709293572000},{"path":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1709293572000},{"path":"C:\\Users\\ADMIN\\Desktop\\MiniProgram\\微信小程序-心理资讯\\psychology_admin_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1709293572000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/ADMIN/Desktop/MiniProgram/\\u5FAE\\u4FE1\\u5C0F\\u7A0B\\u5E8F-\\u5FC3\\u7406\\u8D44\\u8BAF/psychology_admin_vue/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport vueQuillEditor from \"../shareModule/vueQuillEditor.vue\";\nexport default {\n  components: {\n    vueQuillEditor: vueQuillEditor\n  },\n  data: function data() {\n    return {\n      isAdd: false,\n      // 弹框是否新增 默认否\n      tableList: [],\n      // 表格数据源\n      shopList: [],\n      // 商户数据源\n      classList: [],\n      // 分类数据源\n      searchQuery: '',\n      // 搜索\n      isModal: false,\n      // 控制对话框的显示与隐藏\n      formSource: {\n        usershop_id: '',\n        // 创建用户\n        class_id: '',\n        // 文章分类\n        item_name: '',\n        // 文章标题\n        item_image: '',\n        // 文章图片\n        item_practice: '',\n        // 内容\n        is_recommend: 0,\n        // 当前文章是否被当前用户推荐 1推荐 0未推荐\n        update_time: this.$moment(new Date()).format('YYYY/MM/DD HH:mm:ss')\n      },\n      // 表单数据\n\n      dialogVisible: false,\n      fileList: [],\n      // 上传的图片数组\n      viewImage: '' // 用于放大查看图片\n    };\n  },\n  created: function created() {\n    this.getTableList(); // 获取文章\n    this.getUserList(); // 获取商户\n    this.getClassList(); // 获取分类\n  },\n  methods: {\n    // 上传图片\n    upload: function () {\n      var _upload = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(f) {\n        var formData, _yield$this$$http$pos, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              formData = new FormData();\n              formData.append('tweetPic', f.file, f.file.name);\n              _context.next = 4;\n              return this.$http.post('uploadImg', formData);\n            case 4:\n              _yield$this$$http$pos = _context.sent;\n              res = _yield$this$$http$pos.data;\n              console.log(res, '======图片');\n              if (res.status === 200) {\n                this.formSource.item_image = res.data.localIamgeAddress;\n              } else {\n                this.$message.error(res.msg);\n              }\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function upload(_x) {\n        return _upload.apply(this, arguments);\n      }\n      return upload;\n    }(),\n    // 根据文章名称查询文章\n    getShopnameList: function () {\n      var _getShopnameList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var _yield$this$$http$pos2, res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.$http.post('getAllClassContent', {\n                title: this.searchQuery\n              });\n            case 2:\n              _yield$this$$http$pos2 = _context2.sent;\n              res = _yield$this$$http$pos2.data;\n              if (res.status === 200) {\n                this.tableList = res.data;\n              } else {\n                this.$message.error(res.msg);\n              }\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function getShopnameList() {\n        return _getShopnameList.apply(this, arguments);\n      }\n      return getShopnameList;\n    }(),\n    // 获取所有分类下的文章\n    getTableList: function () {\n      var _getTableList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var _yield$this$$http$pos3, res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.$http.post('getAllClassContent', {});\n            case 2:\n              _yield$this$$http$pos3 = _context3.sent;\n              res = _yield$this$$http$pos3.data;\n              if (res.status === 200) {\n                this.tableList = res.data;\n              } else {\n                this.$message.error(res.msg);\n              }\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function getTableList() {\n        return _getTableList.apply(this, arguments);\n      }\n      return getTableList;\n    }(),\n    // 打开文章信息的弹框\n    setShopModal: function setShopModal(isAdd, data) {\n      this.isModal = true;\n      this.isAdd = isAdd;\n      if (!isAdd && data) {\n        this.formSource = JSON.parse(JSON.stringify(data));\n        this.fileList = [{\n          url: data.item_image\n        }];\n      }\n    },\n    // 新增 & 修改文章\n    saveData: function () {\n      var _saveData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var _yield$this$$http$pos4, res, _yield$this$$http$pos5, _res;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (this.checkForm(this.formSource)) {\n                _context4.next = 2;\n                break;\n              }\n              return _context4.abrupt(\"return\", false);\n            case 2:\n              if (!this.isAdd) {\n                _context4.next = 10;\n                break;\n              }\n              _context4.next = 5;\n              return this.$http.post('addAllClassContent', this.formSource);\n            case 5:\n              _yield$this$$http$pos4 = _context4.sent;\n              res = _yield$this$$http$pos4.data;\n              if (res.status === 200) {\n                this.isModal = false;\n                this.getTableList();\n              } else {\n                this.$message.error(res.msg);\n              }\n              _context4.next = 15;\n              break;\n            case 10:\n              _context4.next = 12;\n              return this.$http.post('editAllClassContent', this.formSource);\n            case 12:\n              _yield$this$$http$pos5 = _context4.sent;\n              _res = _yield$this$$http$pos5.data;\n              if (_res.status === 200) {\n                this.isModal = false;\n                this.getTableList();\n              } else {\n                this.$message.error(_res.msg);\n              }\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function saveData() {\n        return _saveData.apply(this, arguments);\n      }\n      return saveData;\n    }(),\n    // 检查form表单是否全部填写了\n    checkForm: function checkForm(data) {\n      if (!data.usershop_id) {\n        this.$message.error('请选择创建用户');\n        return false;\n      }\n      if (!data.class_id) {\n        this.$message.error('请选择文章分类');\n        return false;\n      }\n      if (!data.item_name) {\n        this.$message.error('请输入文章标题');\n        return false;\n      }\n      if (!data.item_image) {\n        this.$message.error('请上传文章图片');\n        return false;\n      }\n      if (!data.item_practice) {\n        this.$message.error('请输入内容');\n        return false;\n      }\n      return true;\n    },\n    // 根据id删除文章\n    removeShopById: function () {\n      var _removeShopById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(id) {\n        var _this = this;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              this.$confirm('此操作将无法恢复, 是否继续?', '提示', {\n                confirmButtonText: '确定',\n                cancelButtonText: '取消',\n                type: 'warning'\n              }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n                var _yield$_this$$http$po, res;\n                return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) switch (_context5.prev = _context5.next) {\n                    case 0:\n                      _context5.next = 2;\n                      return _this.$http.post('delAllClassContent', {\n                        id: id\n                      });\n                    case 2:\n                      _yield$_this$$http$po = _context5.sent;\n                      res = _yield$_this$$http$po.data;\n                      if (res.status === 200) {\n                        _this.getTableList();\n                      } else {\n                        _this.$message.error(res.msg);\n                      }\n                    case 5:\n                    case \"end\":\n                      return _context5.stop();\n                  }\n                }, _callee5);\n              }))).catch(function () {});\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function removeShopById(_x2) {\n        return _removeShopById.apply(this, arguments);\n      }\n      return removeShopById;\n    }(),\n    imageChange: function imageChange(res, file) {\n      // this.formSource.item_image = res.url\n      console.log(res, file, '=====上传图片的信息');\n      this.fileList = file; // 图片信息发生变化时 赋值给图\n    },\n    handleRemove: function handleRemove(file) {\n      this.fileList = this.fileList.filter(function (item) {\n        return file.uid !== item.uid;\n      }); // 保留除当前点击图片外的所有图片\n    },\n    // 放大图片\n    handlePictureCardPreview: function handlePictureCardPreview(file) {\n      this.viewImage = file.url;\n      this.dialogVisible = true;\n    },\n    // 由于限制了上传图片的个数 此时提示用户\n    exceedChange: function exceedChange() {\n      this.$message.error('文章图片仅支持上传一张');\n    },\n    // 接收子组件 富文本编辑器传递过来的参数\n    childByValue: function childByValue(val) {\n      console.log(val, '接收的数据');\n      this.formSource.item_practice = val;\n    },\n    // 获取商户\n    getUserList: function () {\n      var _getUserList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7() {\n        var _yield$this$$http$pos6, res;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return this.$http.post('getUser', {});\n            case 2:\n              _yield$this$$http$pos6 = _context7.sent;\n              res = _yield$this$$http$pos6.data;\n              if (res.status === 200) {\n                this.shopList = res.data;\n              } else {\n                this.$message.error(res.msg);\n              }\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function getUserList() {\n        return _getUserList.apply(this, arguments);\n      }\n      return getUserList;\n    }(),\n    // 获取分类\n    getClassList: function () {\n      var _getClassList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n        var _yield$this$$http$pos7, res;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return this.$http.post('getClassTabs', {});\n            case 2:\n              _yield$this$$http$pos7 = _context8.sent;\n              res = _yield$this$$http$pos7.data;\n              if (res.status === 200) {\n                this.classList = res.data;\n              } else {\n                this.$message.error(res.msg);\n              }\n            case 5:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function getClassList() {\n        return _getClassList.apply(this, arguments);\n      }\n      return getClassList;\n    }(),\n    // 关闭修改对话框\n    editDialogClosed: function editDialogClosed() {\n      this.formSource = {\n        usershop_id: '',\n        // 创建用户\n        class_id: '',\n        // 文章分类\n        item_name: '',\n        // 文章标题\n        item_image: '',\n        // 文章图片\n        item_practice: '',\n        // 内容\n        is_recommend: 0 // 当前文章是否被当前用户推荐 1推荐 0未推荐\n      };\n      this.fileList = [];\n    }\n  }\n};",{"version":3,"names":["vueQuillEditor","components","data","isAdd","tableList","shopList","classList","searchQuery","isModal","formSource","usershop_id","class_id","item_name","item_image","item_practice","is_recommend","update_time","$moment","Date","format","dialogVisible","fileList","viewImage","created","getTableList","getUserList","getClassList","methods","upload","_upload","_asyncToGenerator","regeneratorRuntime","mark","_callee","f","formData","_yield$this$$http$pos","res","wrap","_callee$","_context","prev","next","FormData","append","file","name","$http","post","sent","console","log","status","localIamgeAddress","$message","error","msg","stop","_x","apply","arguments","getShopnameList","_getShopnameList","_callee2","_yield$this$$http$pos2","_callee2$","_context2","title","_getTableList","_callee3","_yield$this$$http$pos3","_callee3$","_context3","setShopModal","JSON","parse","stringify","url","saveData","_saveData","_callee4","_yield$this$$http$pos4","_yield$this$$http$pos5","_res","_callee4$","_context4","checkForm","abrupt","removeShopById","_removeShopById","_callee6","id","_this","_callee6$","_context6","$confirm","confirmButtonText","cancelButtonText","type","then","_callee5","_yield$_this$$http$po","_callee5$","_context5","catch","_x2","imageChange","handleRemove","filter","item","uid","handlePictureCardPreview","exceedChange","childByValue","val","_getUserList","_callee7","_yield$this$$http$pos6","_callee7$","_context7","_getClassList","_callee8","_yield$this$$http$pos7","_callee8$","_context8","editDialogClosed"],"sources":["src/components/shop/ArticleList.vue"],"sourcesContent":["<template>\r\n    <div class=\"list\">\r\n        <!-- 面包屑导航区域 -->\r\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>服务管理</el-breadcrumb-item>\r\n            <el-breadcrumb-item>文章管理</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n\r\n        <!-- 卡片视图区域 -->\r\n        <el-card>\r\n            <!-- 搜索与添加区域 -->\r\n            <el-row :gutter=\"20\">\r\n                <el-col :span=\"8\">\r\n                    <el-input placeholder=\"请输入文章标题\" v-model=\"searchQuery\" clearable @clear=\"getTableList()\">\r\n                        <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"getShopnameList\"></el-button>\r\n                    </el-input>\r\n                </el-col>\r\n                <el-col :span=\"4\">\r\n                    <el-button type=\"primary\" @click=\"setShopModal(true,null)\">新增文章</el-button>\r\n                </el-col>\r\n            </el-row>\r\n\r\n            <!-- 文章列表区域 -->\r\n            <el-table :data=\"tableList\" border stripe>\r\n                <el-table-column label=\"序号\" type=\"index\"></el-table-column>\r\n                <el-table-column label=\"创建用户\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-select style=\"width:60%;\" v-model=\"scope.row.usershop_id\" disabled>\r\n                            <el-option v-for=\"(item, index) in shopList\" :key=\"index\" :label=\"item.username\" :value=\"item.id\"></el-option>\r\n                        </el-select>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"文章分类\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-select style=\"width:60%;\" v-model=\"scope.row.class_id\" disabled>\r\n                            <el-option v-for=\"(item, index) in classList\" :key=\"index\" :label=\"item.class_name\" :value=\"item.id\"></el-option>\r\n                        </el-select>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"文章信息\">\r\n                    <template slot-scope=\"scope\">\r\n                        <div class=\"tabinfo\">\r\n                            <div class=\"imgbox\">\r\n                                <img class=\"commodity-img\" :src=\"scope.row.item_image\">\r\n                            </div>\r\n                            <div class=\"textbox\">\r\n                                <div>文章标题：{{scope.row.item_name}}</div>\r\n                            </div>\r\n                        </div>\r\n                    </template>\r\n                </el-table-column>\r\n                <el-table-column label=\"是否推荐\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-tag :type=\"scope.row.is_recommend ? 'success' : 'info'\">\r\n                            {{scope.row.is_recommend ? '是' : '否'}}\r\n                        </el-tag>\r\n                    </template>\r\n                </el-table-column>\r\n                <!-- <el-table-column label=\"内容\">\r\n                    <template slot-scope=\"scope\">\r\n                        <div v-html=\"scope.row.item_practice\"></div>\r\n                    </template>\r\n                </el-table-column> -->\r\n                <el-table-column label=\"操作\" width=\"150px\">\r\n                    <template slot-scope=\"scope\">\r\n                        <!-- 修改按钮 -->\r\n                        <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"setShopModal(false,scope.row)\"></el-button>\r\n                        <!-- 删除按钮 -->\r\n                        <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"removeShopById(scope.row.id)\"></el-button>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n        </el-card>\r\n\r\n        <!-- 新增 & 修改文章内容区域 -->\r\n        <el-dialog title=\"新增文章\" :visible.sync=\"isModal\" width=\"66%\" @close=\"editDialogClosed\">\r\n            <el-form :model=\"formSource\" ref=\"formSourceRef\" label-width=\"90px\">\r\n                <el-form-item label=\"创建用户\" label-width=\"160px\" required>\r\n                    <el-select style=\"width:100%;\" v-model=\"formSource.usershop_id\" placeholder=\"请选择创建用户\">\r\n                        <el-option v-for=\"(item, index) in shopList\" :key=\"index\" :label=\"item.username\" :value=\"item.id\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item label=\"文章分类\" label-width=\"160px\" required>\r\n                    <el-select style=\"width:100%;\" v-model=\"formSource.class_id\" placeholder=\"请选择文章分类\">\r\n                        <el-option v-for=\"(item, index) in classList\" :key=\"index\" :label=\"item.class_name\" :value=\"item.id\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item label=\"文章标题\" label-width=\"160px\" required>\r\n                    <el-input maxlength=\"36\" v-model=\"formSource.item_name\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"文章图片\" label-width=\"160px\" required>\r\n                    <!-- <el-upload action=\"http://localhost:6008/uploadImg\" :http-request=\"upload\" list-type=\"picture-card\" :auto-upload=\"false\" :file-list=\"fileList\" :limit=\"3\" :on-change=\"imageChange\" :on-exceed=\"exceedChange\"> -->\r\n                    <el-upload action=\"http://localhost:6008/uploadImg\" :http-request=\"upload\" list-type=\"picture-card\" :file-list=\"fileList\" :limit=\"1\" :on-change=\"imageChange\" :on-exceed=\"exceedChange\">\r\n                        <i slot=\"default\" class=\"el-icon-plus\"></i>\r\n                        <div slot=\"file\" slot-scope=\"{file}\">\r\n                            <img class=\"el-upload-list__item-thumbnail\" :src=\"file.url\" alt=\"\">\r\n                            <span class=\"el-upload-list__item-actions\">\r\n                                <span class=\"el-upload-list__item-preview\" @click=\"handlePictureCardPreview(file)\">\r\n                                    <i class=\"el-icon-zoom-in\"></i>\r\n                                </span>\r\n                                <span v-if=\"fileList && fileList.length !== 0\" class=\"el-upload-list__item-delete\" @click=\"handleRemove(file)\">\r\n                                    <i class=\"el-icon-delete\"></i>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                    </el-upload>\r\n                </el-form-item>\r\n                <el-form-item label=\"是否推荐\" label-width=\"160px\" required>\r\n                    <el-select style=\"width:100%;\" v-model=\"formSource.is_recommend\" placeholder=\"请选择是否是付费推荐\">\r\n                        <el-option label=\"不推荐\" :value=\"0\"></el-option>\r\n                        <el-option label=\"推荐\" :value=\"1\"></el-option>\r\n                    </el-select>\r\n                </el-form-item>\r\n                <el-form-item label=\"内容\" label-width=\"160px\" required>\r\n                    <!-- <el-input v-model=\"formSource.item_practice\"></el-input> -->\r\n                    <vueQuillEditor @child-by-value=\"childByValue\" :msg-object=\"formSource.item_practice\"></vueQuillEditor>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button type=\"primary\" @click=\"saveData\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n\r\n        <!-- 放大图片 -->\r\n        <el-dialog :visible.sync=\"dialogVisible\">\r\n            <img width=\"100%\" :src=\"viewImage\" alt=\"\">\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n<script>\r\nimport vueQuillEditor from '../shareModule/vueQuillEditor.vue'\r\nexport default {\r\n    components: {\r\n        vueQuillEditor: vueQuillEditor,\r\n    },\r\n    data() {\r\n        return {\r\n            isAdd: false, // 弹框是否新增 默认否\r\n            tableList: [], // 表格数据源\r\n            shopList: [], // 商户数据源\r\n            classList: [], // 分类数据源\r\n            searchQuery: '', // 搜索\r\n            isModal: false, // 控制对话框的显示与隐藏\r\n            formSource: {\r\n                usershop_id: '', // 创建用户\r\n                class_id: '', // 文章分类\r\n                item_name: '', // 文章标题\r\n                item_image: '', // 文章图片\r\n                item_practice: '', // 内容\r\n                is_recommend: 0, // 当前文章是否被当前用户推荐 1推荐 0未推荐\r\n                update_time: this.$moment(new Date()).format('YYYY/MM/DD HH:mm:ss'),\r\n            }, // 表单数据\r\n\r\n            dialogVisible: false,\r\n            fileList: [], // 上传的图片数组\r\n            viewImage: '', // 用于放大查看图片\r\n        }\r\n    },\r\n    created() {\r\n        this.getTableList() // 获取文章\r\n        this.getUserList() // 获取商户\r\n        this.getClassList() // 获取分类\r\n    },\r\n    methods: {\r\n        // 上传图片\r\n        async upload(f) {\r\n            var formData = new FormData()\r\n            formData.append('tweetPic', f.file, f.file.name)\r\n            const { data: res } = await this.$http.post('uploadImg', formData)\r\n            console.log(res, '======图片')\r\n            if (res.status === 200) {\r\n                this.formSource.item_image = res.data.localIamgeAddress\r\n            } else {\r\n                this.$message.error(res.msg)\r\n            }\r\n        },\r\n        // 根据文章名称查询文章\r\n        async getShopnameList() {\r\n            const { data: res } = await this.$http.post('getAllClassContent', { title: this.searchQuery })\r\n            if (res.status === 200) {\r\n                this.tableList = res.data\r\n            } else {\r\n                this.$message.error(res.msg)\r\n            }\r\n        },\r\n        // 获取所有分类下的文章\r\n        async getTableList() {\r\n            const { data: res } = await this.$http.post('getAllClassContent', {})\r\n            if (res.status === 200) {\r\n                this.tableList = res.data\r\n            } else {\r\n                this.$message.error(res.msg)\r\n            }\r\n        },\r\n        // 打开文章信息的弹框\r\n        setShopModal(isAdd, data) {\r\n            this.isModal = true\r\n            this.isAdd = isAdd\r\n            if (!isAdd && data) {\r\n                this.formSource = JSON.parse(JSON.stringify(data));\r\n                this.fileList = [{ url: data.item_image }]\r\n            }\r\n        },\r\n        // 新增 & 修改文章\r\n        async saveData() {\r\n            // 未通过检测 则不在继续执行\r\n            if (!this.checkForm(this.formSource)) {\r\n                return false\r\n            }\r\n            // 已通过检测 则可以发起网络请求\r\n            if (this.isAdd) {\r\n                // 新增\r\n                const { data: res } = await this.$http.post('addAllClassContent', this.formSource)\r\n                if (res.status === 200) {\r\n                    this.isModal = false\r\n                    this.getTableList()\r\n                } else {\r\n                    this.$message.error(res.msg)\r\n                }\r\n            } else {\r\n                // 修改\r\n                // let\r\n                const { data: res } = await this.$http.post('editAllClassContent', this.formSource)\r\n                if (res.status === 200) {\r\n                    this.isModal = false\r\n                    this.getTableList()\r\n                } else {\r\n                    this.$message.error(res.msg)\r\n                }\r\n            }\r\n        },\r\n        // 检查form表单是否全部填写了\r\n        checkForm(data) {\r\n            if (!data.usershop_id) {\r\n                this.$message.error('请选择创建用户')\r\n                return false\r\n            }\r\n            if (!data.class_id) {\r\n                this.$message.error('请选择文章分类')\r\n                return false\r\n            }\r\n            if (!data.item_name) {\r\n                this.$message.error('请输入文章标题')\r\n                return false\r\n            }\r\n            if (!data.item_image) {\r\n                this.$message.error('请上传文章图片')\r\n                return false\r\n            }\r\n            if (!data.item_practice) {\r\n                this.$message.error('请输入内容')\r\n                return false\r\n            }\r\n\r\n            return true\r\n        },\r\n        // 根据id删除文章\r\n        async removeShopById(id) {\r\n            this.$confirm('此操作将无法恢复, 是否继续?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning',\r\n            })\r\n                .then(async () => {\r\n                    const { data: res } = await this.$http.post('delAllClassContent', { id: id })\r\n                    if (res.status === 200) {\r\n                        this.getTableList()\r\n                    } else {\r\n                        this.$message.error(res.msg)\r\n                    }\r\n                })\r\n                .catch(() => {})\r\n        },\r\n        imageChange(res, file) {\r\n            // this.formSource.item_image = res.url\r\n            console.log(res, file, '=====上传图片的信息')\r\n            this.fileList = file // 图片信息发生变化时 赋值给图\r\n        },\r\n        handleRemove(file) {\r\n            this.fileList = this.fileList.filter((item) => file.uid !== item.uid) // 保留除当前点击图片外的所有图片\r\n        },\r\n        // 放大图片\r\n        handlePictureCardPreview(file) {\r\n            this.viewImage = file.url\r\n            this.dialogVisible = true\r\n        },\r\n        // 由于限制了上传图片的个数 此时提示用户\r\n        exceedChange() {\r\n            this.$message.error('文章图片仅支持上传一张')\r\n        },\r\n\r\n        // 接收子组件 富文本编辑器传递过来的参数\r\n        childByValue(val) {\r\n            console.log(val, '接收的数据')\r\n            this.formSource.item_practice = val\r\n        },\r\n        // 获取商户\r\n        async getUserList() {\r\n            const { data: res } = await this.$http.post('getUser', {})\r\n            if (res.status === 200) {\r\n                this.shopList = res.data\r\n            } else {\r\n                this.$message.error(res.msg)\r\n            }\r\n        },\r\n        // 获取分类\r\n        async getClassList() {\r\n            const { data: res } = await this.$http.post('getClassTabs', {})\r\n            if (res.status === 200) {\r\n                this.classList = res.data\r\n            } else {\r\n                this.$message.error(res.msg)\r\n            }\r\n        },\r\n\r\n        // 关闭修改对话框\r\n        editDialogClosed() {\r\n            this.formSource = {\r\n                usershop_id: '', // 创建用户\r\n                class_id: '', // 文章分类\r\n                item_name: '', // 文章标题\r\n                item_image: '', // 文章图片\r\n                item_practice: '', // 内容\r\n                is_recommend: 0, // 当前文章是否被当前用户推荐 1推荐 0未推荐\r\n            }\r\n            this.fileList = []\r\n        },\r\n    },\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.tabinfo {\r\n    display: flex;\r\n\r\n    .imgbox {\r\n        width: 60px;\r\n        padding: 10px;\r\n        padding-left: 0;\r\n        position: relative;\r\n\r\n        .status_ts {\r\n            position: absolute;\r\n            width: 60px;\r\n            height: 60px;\r\n            padding-top: 18px;\r\n            top: 10px;\r\n            left: 0;\r\n            background: rgba(0, 0, 0, 0.5);\r\n            text-align: center;\r\n            color: #fff;\r\n            display: inline-block;\r\n            z-index: 1000;\r\n            border-radius: 4px;\r\n        }\r\n\r\n        .commodity-img,\r\n        .defaultimg {\r\n            cursor: pointer;\r\n            border-radius: 4px;\r\n            transition: all 0.2s;\r\n            border: 1px solid #f1f1f1;\r\n            width: 60px;\r\n            height: 60px;\r\n        }\r\n\r\n        .defaultimg {\r\n            background: #e9e9e9;\r\n            display: inline-block;\r\n            text-align: center;\r\n            padding-top: 15px;\r\n        }\r\n\r\n        // .commodity-img:hover {\r\n        //     z-index: 1000;\r\n        //     margin-left: 142px;\r\n        //     transform: scale(6);\r\n        //     position: relative;\r\n        //     z-index: 1001;\r\n        // }\r\n    }\r\n\r\n    .textbox {\r\n        margin: 10px 0 0 10px;\r\n    }\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]}]}